# All Python projects must use pre-commit
[nitpick.files.present]
".pre-commit-config.yaml" = "You must create a .pre-commit-config.yaml file at the root of the project."

# All Python projects must install meta hooks
[[".pre-commit-config.yaml".repos]]
repo = "meta"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-hooks-apply"
name = "check-hooks-apply"

[[".pre-commit-config.yaml".repos.hooks]]
id = "check-useless-excludes"
name = "check-useless-excludes"

# All Python projects must use pyupgrade
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/asottile/pyupgrade"

[[".pre-commit-config.yaml".repos.hooks]]
id = "pyupgrade"

# All Python projects must use trailing commas in multiline expressions
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/asottile/add-trailing-comma"

[[".pre-commit-config.yaml".repos.hooks]]
id = "add-trailing-comma"
name = "add-trailing-comma"

[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/pre-commit/pre-commit-hooks"

# Remove trailing whitespaces from files in Python projects
# using pre-commit directly
[[".pre-commit-config.yaml".repos.hooks]]
id = "trailing-whitespace"
# I like that hook identifiers show their ids when running,
# not their readable names, I feel that really ugly
name = "trailing-whitespace"

# Fix end of files in Python projects using pre-commit
[[".pre-commit-config.yaml".repos.hooks]]
id = "end-of-file-fixer"
name = "end-of-file-fixer"

# All Python projects must use the debug-statements hook:
# https://github.com/pre-commit/pre-commit-hooks#debug-statements
[[".pre-commit-config.yaml".repos.hooks]]
id = "debug-statements"
name = "debug-statements"

# All Python projects must use Nitpick itself via pre-commit
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/andreoliwa/nitpick"

[[".pre-commit-config.yaml".repos.hooks]]
# don't use the default `nitpick-fix` because is too destructive
id = "nitpick-check"
name = "nitpick"
alias = "nitpick"

# .editorconfig with pre-commit
# In Python projects we check that editorconfig rules are followed
# by using pre-commit
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/editorconfig-checker/editorconfig-checker.python"

[[".pre-commit-config.yaml".repos.hooks]]
id = "editorconfig-checker"
name = "editorconfig-checker"
alias = "ec"

# Hooks for checking files with JSON schema
[[".pre-commit-config.yaml".repos]]
repo = "https://github.com/python-jsonschema/check-jsonschema"
# TOML checking currently only possible from main branch
rev = "main"

# Schema validation for pyproject.toml
[[".pre-commit-config.yaml".repos.hooks]]
id = "check-jsonschema"
name = "pyproject.toml schema"
alias = "pyproject.toml schema"
files = "^pyproject\\.toml$"
additional_dependencies = ["tomli"]
types_or = ["toml"]
args = [
  "--schemafile",
  "https://raw.githubusercontent.com/mondeja/nitpick-styles/master/python/pyproject/pyproject.toml.json",
]

# Schema validation for .github/workflows/pre-commit.yml
[[".pre-commit-config.yaml".repos.hooks]]
id = "check-jsonschema"
name = ".github/workflows/pre-commit.yml schema"
alias = ".github/workflows/pre-commit.yml schema"
files = "^\\.github/workflows/pre-commit\\.yml$"
args = [
  "--schemafile",
  "https://raw.githubusercontent.com/mondeja/nitpick-styles/master/python/.github/workflows/pre-commit.json",
]

# Schema validation for .github/workflows/pre-commit-autoupdate.yml
[[".pre-commit-config.yaml".repos.hooks]]
id = "check-jsonschema"
name = ".github/workflows/pre-commit-autoupdate.yml schema"
alias = ".github/workflows/pre-commit-autoupdate.yml schema"
files = "^\\.github/workflows/pre-commit-autoupdate\\.yml$"
args = [
  "--schemafile",
  "https://raw.githubusercontent.com/mondeja/nitpick-styles/master/python/.github/workflows/pre-commit-autoupdate.json",
]

# Schema validation for .github/workflows/update-copyright-years.yml
[[".pre-commit-config.yaml".repos.hooks]]
id = "check-jsonschema"
name = ".github/workflows/update-copyright-years.yml schema"
alias = ".github/workflows/update-copyright-years.yml schema"
files = "^\\.github/workflows/update-copyright-years\\.yml$"
args = [
  "--schemafile",
  "https://raw.githubusercontent.com/mondeja/nitpick-styles/master/base/.github/workflows/update-copyright-years.json",
]
